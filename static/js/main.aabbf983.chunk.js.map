{"version":3,"sources":["services/api.ts","hooks/TransactionsContext.tsx","components/Summary/styles.ts","assets/income.svg","components/Summary/index.tsx","components/TransactionsTable/styles.ts","components/TransactionsTable/index.tsx","components/Dashboard/styles.ts","components/Dashboard/index.tsx","components/Header/styles.ts","components/Header/index.tsx","assets/close.svg","components/NewTransactionModal/styles.ts","components/NewTransactionModal/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","TransactionContext","createContext","TransactionProvider","children","useState","transactions","setTransactions","transactionInput","post","title","amount","category","response","data","deleteTransaction","transactionId","console","log","delete","useEffect","get","then","Provider","value","createTransaction","useTransactions","useContext","Container","styled","div","Summary","summary","reduce","acc","transaction","wagao","total","alisson","bebidas","withdraws","src","incomeImg","alt","Intl","NumberFormat","style","currency","format","TransactionsTable","alert","map","className","type","DateTimeFormat","Date","createdAt","onClick","deleteTransactionId","_id","main","Dashboard","header","Content","Header","onOpenNewTransactionModal","colors","green","red","form","TransactionTypeContainer","NewTransactionModal","button","isActive","activeColor","transparentize","darken","isOpen","onRequestClose","setType","setTitle","setAmout","setCategory","loading","setLoading","event","preventDefault","overlayClassName","closeImg","onSubmit","placeholder","onChange","target","Number","Box","sx","minWidth","FormControl","fullWidth","InputLabel","id","Select","labelId","label","MenuItem","disabled","GlobalStyle","createGlobalStyle","Modal","setAppElement","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aabbf983.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'https://api-dom-wagao-barber-production.up.railway.app'\n});","import {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState\n} from \"react\";\nimport { api } from \"../services/api\";\n\ninterface Transactions {\n  _id?: number;\n  title: string;\n  type: string\n  category: string\n  amount: number;\n  createdAt?: string;\n}\n\n\ninterface TransactionsProps {\n  title: string;\n  category: string\n  amount: number;\n}\n\n\n// type TransactionInput = Omit<Transactions, 'id' | 'createdAt'>\n\ninterface TransactionsProviderProps {\n  children: ReactNode;\n}\n\ninterface TransactionContextData {\n  transactions: Transactions[];\n  createTransaction: (transaction: Transactions) => void;\n  deleteTransaction: (transactionId: Number) => void;\n}\n\nconst TransactionContext = createContext<TransactionContextData>(\n  {} as TransactionContextData\n);\n\nexport const TransactionProvider = ({ children }: TransactionsProviderProps) => {\n  const [transactions, setTransactions] = useState<Transactions[]>([]);\n\n  useEffect(() => {\n    api.get('/transactions')\n      .then((response) => {\n        setTransactions(response.data)\n      });\n  }, [deleteTransaction]);\n\n\n  async function createTransaction(transactionInput: TransactionsProps) {\n    const response = await api.post('/transactions', {\n      title: transactionInput.title,\n      amount: transactionInput.amount,\n      category: transactionInput.category\n    });\n\n    const { data } = response;\n    \n    setTransactions([...transactions, data]);\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  async function deleteTransaction(transactionId: Number) {\n    console.log('transaction ID',transactionId);\n    await api.delete(`/transactions/${transactionId}`);\n    console.log('apagou')\n  }\n\n  return (\n    <TransactionContext.Provider value={{ transactions, createTransaction, deleteTransaction }}>\n      {children}\n    </TransactionContext.Provider>\n  );\n};\n\nexport const useTransactions = () => {\n  const contex = useContext(TransactionContext);\n  return contex;\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2rem;\n  margin-top: -10rem;\n\n  div {\n    padding: 1.5rem 2rem;\n    color: var(--text-title);\n    background: var(--shape);\n    border-radius: 0.25rem;\n    box-shadow: 0px 1.5rem 4rem rgba(0, 0, 0, 0.06);\n\n    header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    strong {\n      display: block;\n      margin-top: 1rem;\n      font-size: 2rem;\n      font-weight: 500;\n      line-height: 3rem;\n    }\n\n    &.highlight-background {\n      color: #ffffff;\n      background: linear-gradient(\n        to right,\n        var(--orange) 0%,\n        var(--orange-light) 51%,\n        var(--orange) 100%\n      );\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/income.d58effe2.svg\";","\n\nimport { useTransactions } from '../../hooks/TransactionsContext';\n\nimport { Container } from \"./styles\";\n\nimport incomeImg from '../../assets/income.svg';\n// import outcomeImg from '../../assets/outcome.svg';\n// import totalImg from '../../assets/total.svg';\n\nexport const Summary = () => {\n  const { transactions } = useTransactions();\n\n  const summary = transactions.reduce((acc, transaction) => {\n    if (transaction.category === \"WAGAO\") {\n      acc.wagao += transaction.amount;\n      acc.total += transaction.amount;\n\n      return acc;\n    }\n\n    if(transaction.category === \"ALISSON\"){\n      acc.alisson += transaction.amount;\n      acc.total += transaction.amount;\n\n      return acc;\n    }\n\n    if(transaction.category === \"BEBIDAS\"){\n      acc.bebidas += transaction.amount;\n      acc.total += transaction.amount;\n\n      return acc;\n    }\n    // else {\n    //   acc.deposits += transaction.amount;\n    //   acc.total += transaction.amount;\n    // }\n\n    console.log('acc', acc)\n    return acc;\n  }, {\n    wagao: 0,\n    alisson: 0,\n    bebidas: 0,\n    withdraws: 0,\n    total: 0\n  });\n\n  return (\n    <Container>\n      <div>\n        <header>\n          <p>Cortes wagao</p>\n          <img src={incomeImg} alt=\"Entradas\" />\n        </header>\n        <strong>\n          {new Intl.NumberFormat('pt-BR', {\n            style: 'currency',\n            currency: 'BRL'\n          }).format(summary.wagao)}\n        </strong>\n      </div>\n\n      <div>\n        <header>\n          <p>Cortes alisson</p>\n          <img src={incomeImg} alt=\"Saídas\" />\n        </header>\n        <strong>\n          {new Intl.NumberFormat('pt-BR', {\n            style: 'currency',\n            currency: 'BRL'\n          }).format(summary.alisson)}\n        </strong>\n      </div>\n\n      <div>\n        <header>\n          <p>Bebidas</p>\n          <img src={incomeImg} alt=\"Saídas\" />\n        </header>\n        <strong>\n          {new Intl.NumberFormat('pt-BR', {\n            style: 'currency',\n            currency: 'BRL'\n          }).format(summary.bebidas)}\n        </strong>\n      </div> \n\n      {/* <div className=\"highlight-background\">\n        <header>\n          <p>Total</p>\n          <img src={totalImg} alt=\"Total\" />\n        </header>\n        <strong>\n          {new Intl.NumberFormat('pt-BR', {\n            style: 'currency',\n            currency: 'BRL'\n          }).format(summary.total)}\n        </strong>\n      </div> */}\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 4rem;\n\n  table {\n    width: 100%;\n    border-spacing: 0 0.5rem;\n\n    th {\n      padding: 1rem 2rem;\n      font-weight: 400;\n      line-height: 1.5rem;\n      text-align: left;\n      color: var(--text-body);\n    }\n\n    td {\n      padding: 1rem 2rem;\n      color: var(--text-body);\n      background: var(--shape);\n      border: 0;\n      border-radius: 0.25rem;\n\n      &:first-child {\n        color: var(--text-title);\n      }\n\n      &.deposit {\n        color: var(--green);\n      }\n\n      &.withdraw {\n        color: var(--red);\n      }\n    }\n\n    button {\n      padding: 5px;\n      border: 0;\n      border-color: red;\n      background-color: #fefefe ;\n      cursor: pointer;\n    }\n  }\n`;","import { toast } from 'react-toastify';\nimport { useTransactions } from '../../hooks/TransactionsContext';\nimport { Container } from './styles';\n\nexport const TransactionsTable = () => {\n  const { transactions, deleteTransaction } = useTransactions();\n\n  async function deleteTransactionId(transactionId: any) {\n    deleteTransaction(transactionId);\n    alert('Clique no OK para excluir');\n  }\n  return (\n    <Container>\n      <table>\n        <thead>\n          <tr>\n            <th>Título</th>\n            <th>Valor</th>\n            <th>Categoria</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {transactions.map(transaction => (\n            <tr key={transaction._id}>\n              <td>{transaction.title}</td>\n              <td className={transaction.type}>\n                {new Intl.NumberFormat('pt-BR', {\n                  style: 'currency',\n                  currency: 'BRL'\n                }).format(transaction.amount)}\n              </td>\n              <td>{transaction.category}</td>\n              <td>\n                {new Intl.DateTimeFormat('pt-BR').format(\n                  new Date(transaction.createdAt!)\n                )}\n              </td>\n              <td>\n              <button onClick={() => deleteTransactionId(transaction._id)}>Excluir</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Container>\n  );\n}","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  margin: 0 auto;\n  padding: 2.5rem 1rem;\n  max-width: 1120px;\n`;","import { Summary } from '../Summary';\nimport { TransactionsTable } from '../TransactionsTable';\nimport { Container } from './styles';\n\nexport const Dashboard = () => (\n  <Container>\n    <Summary />\n    <TransactionsTable />\n  </Container>\n);","import styled from 'styled-components';\n\nexport const Container = styled.header`\n  background-color: var(--gray-dark);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0 auto;\n  padding: 2rem 1rem 12rem;\n  max-width: 1120px;\n\n  h1 {\n    color: #ffffff ;\n  }\n  button {\n    padding: 0 2rem;\n    height: 3rem;\n    font-size: 1rem;\n    color: #ffffff;\n    background: var(--gray-light);\n    border: 0;\n    border-radius: 0.25rem;\n    transition: filter 0.2s ease-in-out;\n\n    &:hover {\n      filter: brightness(0.9);\n    }\n  }\n`;","import { Container, Content } from './styles';\n\ninterface HeaderProps {\n  onOpenNewTransactionModal: () => void;\n}\n\nexport const Header = ({ onOpenNewTransactionModal }: HeaderProps) => (\n  <Container>\n    <Content>\n      <h1>Finanças barbearia dom wagao</h1>\n      <button type=\"button\" onClick={onOpenNewTransactionModal}>\n        Nova Transação\n      </button>\n    </Content>\n  </Container>\n);","export default __webpack_public_path__ + \"static/media/close.f62862c6.svg\";","import styled from 'styled-components';\nimport { darken, transparentize } from 'polished';\n\ninterface RadioBoxProps {\n  isActive: boolean;\n  activeColor: 'green' | 'red';\n}\n\nconst colors = {\n  green: '#33cc95',\n  red: '#e52e4d'\n}\n\nexport const Container = styled.form`\n  h2 {\n    margin-bottom: 2rem;\n    font-size: 1.5rem;\n    color: var(--text-title);\n  }\n\n  input {\n    padding: 0 1.5rem;\n    width: 100%;\n    height: 4rem;\n    font-size: 1rem;\n    font-weight: 400;\n    background: #e7e9ee;\n    border: 1px solid #d7d7d7;\n    border-radius: 0.25rem;\n\n    &::placeholder {\n      color: var(--text-body);\n    }\n\n    & + input {\n      margin-top: 1rem;\n    }\n  }\n\n  button[type=\"submit\"] {\n    margin-top: 1.5rem;\n    padding: 0 1.5rem;\n    width: 100%;\n    height: 4rem;\n    font-size: 1rem;\n    font-weight: 600;\n    color: #ffffff;\n    background: var(--orange);\n    border: 0;\n    border-radius: 0.25rem;\n    transition: filter 0.2s ease-in-out;\n    \n    &:hover {\n      filter: brightness(0.9);\n    }\n  }\n`;\n\nexport const TransactionTypeContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const RadioBox = styled.button<RadioBoxProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 4rem;\n  background: ${({ isActive, activeColor }) => isActive\n    ? transparentize(0.9, colors[activeColor])\n    : 'transparent'};\n  border: 1px solid #d7d7d7;\n  border-radius: 0.25rem;\n  transition: border-color 0.2s ease-in-out;\n\n  &:hover {\n    border-color: ${darken(0.1, '#d7d7d7')};\n  }\n\n  img {\n    width: 20px;\n    height: 20px;\n  }\n\n  span {\n    display: block;\n    margin-left: 1rem;\n    font-size: 1rem;\n    color: var(--text-title);\n  }\n`;","import { FormEvent, useState } from 'react';\nimport Modal from 'react-modal';\n\nimport { useTransactions } from '../../hooks/TransactionsContext';\nimport closeImg from '../../assets/close.svg';\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nimport { Container, TransactionTypeContainer } from './styles';\n\ninterface NewTransactionModalProps {\n  isOpen: boolean;\n  onRequestClose: () => void;\n}\n\nexport const NewTransactionModal = ({\n  isOpen,\n  onRequestClose\n}: NewTransactionModalProps) => {\n  const { createTransaction } = useTransactions();\n\n  const [type, setType] = useState('deposit');\n  const [title, setTitle] = useState('');\n  const [amount, setAmout] = useState(0);\n  const [category, setCategory] = useState('');\n  const [loading, setLoading] = useState(false);\n\n\n  async function handleCreateNewTransaction(event: FormEvent) {\n    event.preventDefault();\n    \n    if(!title || !amount || !category){\n      alert('Todos os campos devem estar')\n    }\n    setLoading(true)\n    console.log('category', category)\n    await createTransaction({ type, title, amount, category });\n\n    setType('deposit');\n    setTitle('');\n    setAmout(0);\n    setCategory('');\n    onRequestClose();\n    setLoading(false)\n  }\n\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setCategory(event.target.value as string);\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      overlayClassName=\"react-modal-overlay\"\n      className=\"react-modal-content\"\n    >\n      <button\n        className=\"react-modal-close\"\n        type=\"button\"\n        onClick={onRequestClose}\n      >\n        <img src={closeImg} alt=\"Fechal modal\" />\n      </button>\n\n      <Container onSubmit={handleCreateNewTransaction}>\n        <h2>Adicionar nova transaçação</h2>\n\n        <input\n          type=\"text\"\n          placeholder=\"Título\"\n          value={title}\n          onChange={({ target }) => setTitle(target.value)}\n        />\n\n        <input\n          type=\"number\"\n          placeholder=\"Valor\"\n          value={amount}\n          onChange={({ target }) => setAmout(Number(target.value))}\n        />\n\n        <TransactionTypeContainer>\n        <Box sx={{ minWidth: 120 }}>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">Selecione a categoria</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={category}\n              label=\"Selecione a categoria:\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"WAGAO\">WAGAO</MenuItem>\n              <MenuItem value=\"ALISSON\">ALISSON</MenuItem>\n              <MenuItem value=\"BEBIDAS\">BEBIDAS</MenuItem>\n            </Select>\n          </FormControl>\n         </Box>\n        </TransactionTypeContainer>\n\n        <button \n          disabled={loading}\n          type=\"submit\">\n            Cadastrar\n        </button>\n      </Container>\n    </Modal>\n  );\n}","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --background: #f0f2f5;\n    --red: #e52e4d;\n    --green: #33cc95;\n    --blue: #5429cc;\n    --blue-light: #6933ff;\n    --orange: #ff512f;\n    --orange-light: #f09819;\n    --gray-dark: #121214;\n    --gray-light: #202024;\n    --text-title: #363f5f;\n    --text-body: #969cb3;\n    --shape: #ffffff;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html {\n    @media (max-width: 1080px) {\n      font-size: 93.75%;\n    }\n\n    @media (max-width: 720px) {\n      font-size: 87.5%;\n    }\n  }\n\n  body {\n    background-color: var(--background);\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, textarea, button {\n    font-family: 'Poppins', sans-serif;\n    font-weight: 400;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 600;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  [disabled] {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  .react-modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: rgba(0, 0, 0, 0.5);\n  }\n  \n  .react-modal-content {\n    position: relative;\n    padding: 3rem;\n    width: 100%;\n    max-width: 576px;\n    background: var(--background);\n    border-radius: 0.25rem;\n  }\n\n  .react-modal-close {\n    position: absolute;\n    top: 1.5rem;\n    right: 1.5rem;\n    background: transparent;\n    border: 0;\n    transition: filter 0.2s ease-in-out;\n    \n    &:hover {\n      filter: brightness(0.8);\n    }\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\n\nimport { TransactionProvider } from './hooks/TransactionsContext';\n\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { NewTransactionModal } from './components/NewTransactionModal';\n\nimport { GlobalStyle } from \"./styles/global\";\n\n\nModal.setAppElement('#root');\n\nexport const App = () => {\n  const [\n    isNewTransactionModalOpen,\n    setIsNewTransactionModalOpen\n  ] = useState(false);\n\n  function handleOpenNewTransactionModal() {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function handleCloseNewTransactionModal() {\n    setIsNewTransactionModalOpen(false);\n  }\n\n  return (\n    \n    <TransactionProvider>\n      <GlobalStyle />\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal} />\n\n      <Dashboard />\n \n      <NewTransactionModal\n        isOpen={isNewTransactionModalOpen}\n        onRequestClose={handleCloseNewTransactionModal}\n      />\n    </TransactionProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}